{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "test",
    "version" : "1.0.0"
  },
  "tags":[{"name":"security"}],
  "paths" : {
    "/login" : {
      "post" : {
        "tags" : [ "security" ],
        "description" : "Log a user using his username and his password. Return an accessToken and a refreshToken in the headers, and a list of the user authorities in the body",
        "operationId" : "login",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MonoLoginForm"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Authentication succeed, return a list of the user authorities in the body",
            "headers" : {
              "Authorization" : {
                "description" : "Access token with 'Bearer ' prefix",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Refresh-Token" : {
                "description" : "Refresh token with 'Bearer ' prefix",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonoResponseEntityImmutableSetString"
                }
              }
            }
          },
          "401" : {
            "description" : "- INVALID_PASSWORD -> The password associated to this account is invalid\n"
          },
          "403" : {
            "description" : "- ACCOUNT_EXPIRED -> The user account is no more valid\n- PERMISSION_DENIED -> The user does not have the authority `SECURITY_LOGIN_BACKOFFICE`\n- SESSION_EXISTS -> Another session already exits for the user\n"
          },
          "417" : {
            "description" : "- INVALID_FORM -> username: BAD_STRING_SIZE [ 30, 1 ]\n- INVALID_FORM -> password: BAD_STRING_SIZE [ 30, 1 ]\n- INVALID_USERNAME -> The username does not exist\n"
          }
        }
      }
    },
    "/session/validate" : {
      "get" : {
        "tags" : [ "security" ],
        "description" : "Check the expiration of the refreshToken and check if the user has changed network",
        "operationId" : "validateSession",
        "responses" : {
          "401" : {
            "description" : "- INVALID_TOKEN -> The header access token is invalid\n"
          },
          "403" : {
            "description" : "- TOKEN_EXPIRED -> The header access token has expired\n- SESSION_WRONG_NETWORK -> The user session has been opened on another network than the current one\n"
          },
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonoVoid"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/logout" : {
      "delete" : {
        "tags" : [ "security" ],
        "description" : "Delete a user session. You need to pass the refreshToken in the header",
        "operationId" : "logout",
        "responses" : {
          "401" : {
            "description" : "- INVALID_TOKEN -> The header refresh token is invalid\n"
          },
          "403" : {
            "description" : "- TOKEN_EXPIRED -> The header refresh token has expired\n"
          },
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonoResponseEntityVoid"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/user/current" : {
      "get" : {
        "tags" : [ "security" ],
        "description" : "Obtain the user from access token",
        "operationId" : "getCurrentUser",
        "responses" : {
          "401" : {
            "description" : "- INVALID_TOKEN -> The header access token is invalid\n"
          },
          "403" : {
            "description" : "- TOKEN_EXPIRED -> The header access token has expired\n"
          },
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonoUser"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    },
    "/authority/list" : {
      "get" : {
        "tags" : [ "security" ],
        "description" : "Obtain the authorities available in the application",
        "operationId" : "getAvailableAuthorities",
        "responses" : {
          "401" : {
            "description" : "- INVALID_TOKEN -> The header access token is invalid\n"
          },
          "403" : {
            "description" : "- TOKEN_EXPIRED -> The header access token has expired\n"
          },
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FluxUser"
                }
              }
            }
          }
        },
        "security" : [ {
          "Authorization" : [ "SECURITY_AUTHORITY_READ" ]
        } ]
      }
    },
    "/refresh" : {
      "put" : {
        "tags" : [ "security" ],
        "description" : "Generate again the access token using a refresh token, and return a list of the user authorities in the body.",
        "operationId" : "refresh",
        "responses" : {
          "200" : {
            "description" : "Refresh succeed, return a list of the user authorities in the body",
            "headers" : {
              "Authorization" : {
                "description" : "Access token with 'Bearer ' prefix",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              },
              "X-Refresh-Token" : {
                "description" : "Refresh token with 'Bearer ' prefix",
                "style" : "simple",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonoResponseEntityImmutableSetString"
                }
              }
            }
          },
          "401" : {
            "description" : "- INVALID_TOKEN -> The header refresh token is invalid\n"
          },
          "403" : {
            "description" : "- ACCOUNT_EXPIRED -> The user account is no more valid\n- TOKEN_EXPIRED -> The header refresh token has expired\n- MULTIPLE_SESSION -> The user has opened another session, so the token is no more valid\n- SESSION_WRONG_NETWORK -> The user session has been opened on another network than the current one\n"
          }
        },
        "security" : [ {
          "Authorization" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "MonoLoginForm" : {
        "type" : "object"
      },
      "MonoUser" : {
        "type" : "object"
      },
      "FluxUser" : {
        "type" : "object",
        "properties" : {
          "prefetch" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "MonoResponseEntityImmutableSetString" : {
        "type" : "object"
      },
      "MonoResponseEntityVoid" : {
        "type" : "object"
      },
      "MonoVoid" : {
        "type" : "object"
      }
    },
    "securitySchemes" : {
      "Authorization" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}